{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport createApolloClient from '../utils/apolloClient';\nvar globalApolloClient = null;\n/**\n * Installs the Apollo Client on NextPageContext\n * or NextAppContext. Useful if you want to use apolloClient\n * inside getStaticProps, getStaticPaths or getServerSideProps\n * @param {NextPageContext | NextAppContext} ctx\n */\n\nexport var initOnContext = function initOnContext(ctx) {\n  var inAppContext = Boolean(ctx.ctx);\n\n  if (false) {\n    if (inAppContext) {\n      console.warn('Warning: You have opted-out of Automatic Static Optimization due to `withApollo` in `pages/_app`.\\n' + 'Read more: https://err.sh/next.js/opt-out-auto-static-optimization\\n');\n    }\n  }\n\n  var apolloClient = ctx.apolloClient || initApolloClient(ctx.apolloState || {}, inAppContext ? ctx.ctx : ctx);\n\n  apolloClient.toJSON = function () {\n    return null;\n  };\n\n  ctx.apolloClient = apolloClient;\n\n  if (inAppContext) {\n    ctx.ctx.apolloClient = apolloClient;\n  }\n\n  return ctx;\n};\n/**\n * @param  {NormalizedCacheObject} initialState\n * @param  {NextPageContext} ctx\n */\n\nvar initApolloClient = function initApolloClient(initialState, ctx) {\n  if (false) {\n    return createApolloClient(initialState, ctx);\n  } // Reuse client on the client-side\n\n\n  if (!globalApolloClient) {\n    globalApolloClient = createApolloClient(initialState, ctx);\n  }\n\n  return globalApolloClient;\n};\n/**\n * Creates a withApollo HOC\n * that provides the apolloContext\n * to a next.js Page or AppTree.\n * @param  {Object} withApolloOptions\n * @param  {Boolean} [withApolloOptions.ssr=false]\n * @returns {(PageComponent: ReactNode) => ReactNode}\n */\n\n\nexport var withApollo = function withApollo() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$ssr = _ref.ssr,\n      ssr = _ref$ssr === void 0 ? false : _ref$ssr;\n\n  return function (PageComponent) {\n    var WithApollo = function WithApollo(_ref2) {\n      var apolloClient = _ref2.apolloClient,\n          apolloState = _ref2.apolloState,\n          pageProps = _objectWithoutProperties(_ref2, [\"apolloClient\", \"apolloState\"]);\n\n      var client;\n\n      if (apolloClient) {\n        // Happens on: getDataFromTree & next.js ssr\n        client = apolloClient;\n      } else {\n        // Happens on: next.js csr\n        client = initApolloClient(apolloState, undefined);\n      }\n\n      return __jsx(ApolloProvider, {\n        client: client\n      }, __jsx(PageComponent, pageProps));\n    }; // Set the correct displayName in development\n\n\n    if (false) {\n      var displayName = PageComponent.displayName || PageComponent.name || 'Component';\n      WithApollo.displayName = \"withApollo(\".concat(displayName, \")\");\n    }\n\n    if (ssr || PageComponent.getInitialProps) {\n      WithApollo.getInitialProps = /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n          var inAppContext, _initOnContext, apolloClient, pageProps, AppTree, _yield$import, getDataFromTree, getMarkupFromTree, props;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  inAppContext = Boolean(ctx.ctx);\n                  _initOnContext = initOnContext(ctx), apolloClient = _initOnContext.apolloClient; // Run wrapped getInitialProps methods\n\n                  pageProps = {};\n\n                  if (!PageComponent.getInitialProps) {\n                    _context.next = 9;\n                    break;\n                  }\n\n                  _context.next = 6;\n                  return PageComponent.getInitialProps(ctx);\n\n                case 6:\n                  pageProps = _context.sent;\n                  _context.next = 13;\n                  break;\n\n                case 9:\n                  if (!inAppContext) {\n                    _context.next = 13;\n                    break;\n                  }\n\n                  _context.next = 12;\n                  return App.getInitialProps(ctx);\n\n                case 12:\n                  pageProps = _context.sent;\n\n                case 13:\n                  if (!false) {\n                    _context.next = 33;\n                    break;\n                  }\n\n                  AppTree = ctx.AppTree; // When redirecting, the response is finished.\n                  // No point in continuing to render\n\n                  if (!(ctx.res && ctx.res.finished)) {\n                    _context.next = 17;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", pageProps);\n\n                case 17:\n                  if (!(ssr && AppTree)) {\n                    _context.next = 33;\n                    break;\n                  }\n\n                  _context.prev = 18;\n                  _context.next = 21;\n                  return import('@apollo/react-ssr');\n\n                case 21:\n                  _yield$import = _context.sent;\n                  getDataFromTree = _yield$import.getDataFromTree;\n                  getMarkupFromTree = _yield$import.getMarkupFromTree;\n\n                  if (inAppContext) {\n                    props = _objectSpread(_objectSpread({}, pageProps), {}, {\n                      apolloClient: apolloClient\n                    });\n                  } else {\n                    props = {\n                      pageProps: _objectSpread(_objectSpread({}, pageProps), {}, {\n                        apolloClient: apolloClient\n                      })\n                    };\n                  }\n\n                  _context.next = 27;\n                  return getMarkupFromTree({\n                    tree: __jsx(AppTree, props)\n                  });\n\n                case 27:\n                  _context.next = 32;\n                  break;\n\n                case 29:\n                  _context.prev = 29;\n                  _context.t0 = _context[\"catch\"](18);\n                  console.error('Error while running `getDataFromTree`', _context.t0);\n\n                case 32:\n                  Head.rewind();\n\n                case 33:\n                  return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, pageProps), {}, {\n                    apolloState: apolloClient.cache.extract(),\n                    // Provide the client for ssr. As soon as this payload\n                    // gets JSON.stringified it will remove itself.\n                    apolloClient: ctx.apolloClient\n                  }));\n\n                case 34:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[18, 29]]);\n        }));\n\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n    }\n\n    return WithApollo;\n  };\n};","map":null,"metadata":{},"sourceType":"module"}