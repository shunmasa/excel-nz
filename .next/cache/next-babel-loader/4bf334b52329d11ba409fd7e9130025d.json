{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Button, LinearProgress } from \"@material-ui/core\";\nimport { TextField } from 'formik-material-ui';\nimport { toast } from 'react-toastify';\nimport Router from 'next/router';\nimport { useMutation } from '@apollo/react-hooks';\nimport { withApollo } from '../lib/withApolloData';\nimport Typography from '@material-ui/core/Typography';\nimport CREATE_NOTICE from '../graphql/mutation/createNotice';\nimport { Field, Formik, Form } from \"formik\";\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => createStyles({\n  formContainer: {\n    width: \"90%\",\n    marginTop: \"2rem\",\n    marginRight: '5%',\n    marginLeft: '5%'\n  },\n  bodyField: {\n    marginTop: \"2rem\",\n    marginBottom: \"1rem\",\n    width: \"100%\"\n  }\n}));\n\nconst NoticeForm = () => {\n  const [createNotice, {\n    data\n  }] = useMutation(CREATE_NOTICE);\n  const {\n    0: route,\n    1: setRoute\n  } = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    if (route) {\n      Router.reload();\n    }\n  });\n  return __jsx(Formik, {\n    initialValues: {\n      body: ''\n    },\n    validate: values => {\n      console.log('value', values);\n      const errors = {};\n\n      if (!values.body) {\n        errors.body = '入力必須です';\n      }\n\n      return errors;\n    },\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      try {\n        event.preventDefault();\n        await createNotice({\n          variables: {\n            body: values.body\n          }\n        }), toast.success('お知らせが作成されました');\n        Router.reload();\n        setSubmitting(false);\n      } catch (error) {\n        toast.error('サーバーエラーのためデータ送信できませんでした');\n      }\n    }\n  }, ({\n    submitForm,\n    isSubmitting\n  }) => __jsx(Form, {\n    className: classes.formContainer\n  }, __jsx(Typography, {\n    style: {\n      color: \"#fff\",\n      fontSize: \"23px\"\n    }\n  }, \"\\u304A\\u77E5\\u3089\\u305B\\u306E\\u4F5C\\u6210\"), __jsx(Field, {\n    className: classes.bodyField,\n    component: TextField,\n    type: \"text\",\n    label: \"\\u304A\\u77E5\\u3089\\u305B\\u5185\\u5BB9\",\n    name: \"body\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    multiline: true,\n    rows: 10,\n    required: true,\n    fullWidth: true\n  }), __jsx(\"br\", null), isSubmitting && __jsx(LinearProgress, null), __jsx(\"br\", null), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: isSubmitting,\n    onClick: submitForm\n  }, \"Submit\")));\n}; // export default NoticeForm\n\n\nexport default withApollo({\n  ssr: true\n})(NoticeForm);","map":null,"metadata":{},"sourceType":"module"}