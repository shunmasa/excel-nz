{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LOGIN_USER from '../graphql/mutation/login';\nimport { validateEmail } from '../utils/validation';\nimport { setToken } from '../utils/apolloClient';\nimport Cookies from 'js-cookie';\nimport Button from '@material-ui/core/Button';\nimport { toast } from 'react-toastify';\nimport Router from 'next/router';\nimport { useMutation } from '@apollo/react-hooks';\nimport { withApollo } from '../lib/withApolloData';\n\nfunction Copyright() {\n  return __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\"\n  }, 'Copyright Â© ', __jsx(Link, {\n    color: \"inherit\",\n    href: \"https://material-ui.com/\"\n  }, \"developer masa\"), ' ', new Date().getFullYear(), '.');\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      height: '100vh'\n    },\n    image: {\n      backgroundImage: 'url(https://source.unsplash.com/random)',\n      backgroundRepeat: 'no-repeat',\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n      backgroundSize: 'cover',\n      backgroundPosition: 'center'\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n}); // const InitialState ={\n//   email:\"\",\n//   password:\"\"\n// }\n// interface Login {\n//   [key: string]: any;\n//   email:string;\n//   password:string\n// }\n// interface LoginProps {} \n\nvar login = function login() {\n  var _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n      props = _useState[0],\n      setProps = _useState[1];\n\n  var _useState2 = useState(),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useMutation = useMutation(LOGIN_USER),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      login = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  var handleChange = function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    console.log('value:', value);\n    setProps(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  useEffect(function () {\n    var loginData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _data$login, token, userId;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (data) {\n                  // const { data } = await user.query({query: LOGIN_USER,variables: { ...props },});\n                  _data$login = data.login, token = _data$login.token, userId = _data$login.userId;\n                  console.log(\"token\", token);\n                  setToken(token);\n                  Cookies.set('userId', userId, {\n                    expires: 7\n                  });\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function loginData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    loginData();\n  }, [data]); // eslint-disable-line\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"email\", props, \"email\", props.email);\n              event.preventDefault();\n              _context2.prev = 2;\n\n              if (!validateEmail(props.email)) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 6;\n              return login({\n                variables: _objectSpread({}, props)\n              });\n\n            case 6:\n              Router.replace('/dashboard');\n              _context2.next = 10;\n              break;\n\n            case 9:\n              toast.error('Invalid Email');\n\n            case 10:\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](2);\n              toast.error(_context2.t0);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 12]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var classes = useStyles();\n  return __jsx(Grid, {\n    container: true,\n    component: \"main\",\n    className: classes.root\n  }, __jsx(CssBaseline, null), __jsx(Grid, {\n    item: true,\n    xs: false,\n    sm: 4,\n    md: 7,\n    className: classes.image\n  }), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8,\n    md: 5,\n    component: Paper,\n    elevation: 6,\n    square: true\n  }, __jsx(\"div\", {\n    className: classes.paper\n  }, __jsx(Avatar, {\n    className: classes.avatar\n  }, __jsx(LockOutlinedIcon, null)), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h5\"\n  }, \"\\u3054\\u62C5\\u5F53\\u8005\\u69D8\\u30ED\\u30B0\\u30A4\\u30F3\\u30DA\\u30FC\\u30B8\"), __jsx(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    value: props.email,\n    onChange: handleChange,\n    autoComplete: \"email\",\n    autoFocus: true\n  }), __jsx(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    value: props.password,\n    onChange: handleChange,\n    id: \"password\",\n    autoComplete: \"current-password\"\n  }), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    value: \"Submit\"\n  }, \"Sign In\"), __jsx(Box, {\n    mt: 5\n  }, __jsx(Copyright, null))))));\n};\n\nexport default withApollo({\n  ssr: true\n})(login);","map":null,"metadata":{},"sourceType":"module"}